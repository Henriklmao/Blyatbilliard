@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "Tisch",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1370899780 { 
   	label=Kugeldos
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Kugeldos1370899780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kugeldos</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- Bounce(bildschirm: Bildschirm)</TD></TR>
<TR><TD ALIGN="LEFT" ># bewegeKugel(bildschirm: Bildschirm, reset: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># zeichneKugel(bildschirm: Bildschirm)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1370916082 { 
   	label=Kugeluno
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Kugeluno1370916082[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kugeluno</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- Bounce(bildschirm: Bildschirm)</TD></TR>
<TR><TD ALIGN="LEFT" ># bewegeKugel(bildschirm: Bildschirm, reset: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># zeichneKugel(bildschirm: Bildschirm)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_392180826 { 
   	label=Kugelcuatro
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Kugelcuatro392180826[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kugelcuatro</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- Bounce(bildschirm: Bildschirm)</TD></TR>
<TR><TD ALIGN="LEFT" ># bewegeKugel(bildschirm: Bildschirm, reset: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># zeichneKugel(bildschirm: Bildschirm)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_451300560 { 
   	label=Kugeltres
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Kugeltres451300560[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Kugeltres</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- Bounce(bildschirm: Bildschirm)</TD></TR>
<TR><TD ALIGN="LEFT" ># bewegeKugel(bildschirm: Bildschirm, reset: int)</TD></TR>
<TR><TD ALIGN="LEFT" ># zeichneKugel(bildschirm: Bildschirm)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_80817507 { 
   	label=Tisch
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Tisch80817507[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tisch</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ tischLoop()</TD></TR>
<TR><TD ALIGN="LEFT" >+ zeichnen()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Kugelcuatro392180826 -> Tisch80817507[label="Bounce() -> tischLoop()"];
Kugeldos1370899780 -> Tisch80817507[label="Bounce() -> tischLoop()"];
Kugeltres451300560 -> Tisch80817507[label="Bounce() -> tischLoop()"];
Kugeluno1370916082 -> Tisch80817507[label="Bounce() -> tischLoop()"];
Tisch80817507 -> Kugelcuatro392180826[label="tischLoop() -> bewegeKugel()"];
Tisch80817507 -> Kugeldos1370899780[label="tischLoop() -> bewegeKugel()"];
Tisch80817507 -> Kugeltres451300560[label="tischLoop() -> bewegeKugel()"];
Tisch80817507 -> Kugeluno1370916082[label="tischLoop() -> bewegeKugel()"];
    
}
@enduml